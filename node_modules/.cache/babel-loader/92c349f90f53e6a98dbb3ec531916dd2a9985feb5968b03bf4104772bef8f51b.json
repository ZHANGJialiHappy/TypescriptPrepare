{"ast":null,"code":"var _jsxFileName = \"/Users/jiali/project/reactPractice2/Typescript/src/components/Person.js\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Person = _ref => {\n  let {\n    name,\n    email,\n    age,\n    ismarried,\n    friends\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Name: \", name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Name: \", email]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Name: \", age]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"This person \", ismarried ? \"is\" : \"is not\", \" married\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"This person's friends:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }, this), friends.map((friend, key) => /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: friend\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 9\n  }, this);\n};\n_c = Person;\nPerson.propTypes = {\n  name: PropTypes.string,\n  email: PropTypes.string,\n  age: PropTypes.number,\n  isMarried: PropTypes.bool,\n  friends: PropTypes.arrayOf(PropTypes.string)\n};\nvar _c;\n$RefreshReg$(_c, \"Person\");","map":{"version":3,"names":["PropTypes","Person","name","email","age","ismarried","friends","map","friend","key","propTypes","string","number","isMarried","bool","arrayOf"],"sources":["/Users/jiali/project/reactPractice2/Typescript/src/components/Person.js"],"sourcesContent":["import PropTypes from \"prop-types\";\nexport const Person = ({name, email, age, ismarried, friends}) => {\n    return(\n        <div>\n        <h1>Name: {name}</h1>\n        <h1>Name: {email}</h1>\n        <h1>Name: {age}</h1>\n        <h1>This person {ismarried? \"is\" : \"is not\"} married</h1>\n        <h1>This person's friends:</h1>\n        {friends.map((friend, key)=>(\n            <h1>{friend}</h1>\n        ))}\n        </div>\n    );\n};\n\nPerson.propTypes = {\n    name: PropTypes.string,\n    email: PropTypes.string,\n    age: PropTypes.number,\n    isMarried: PropTypes.bool,\n    friends: PropTypes.arrayOf(PropTypes.string),\n};"],"mappings":";AAAA,OAAOA,SAAS,MAAM,YAAY;AAAC;AACnC,OAAO,MAAMC,MAAM,GAAG,QAA4C;EAAA,IAA3C;IAACC,IAAI;IAAEC,KAAK;IAAEC,GAAG;IAAEC,SAAS;IAAEC;EAAO,CAAC;EACzD,oBACI;IAAA,wBACA;MAAA,qBAAWJ,IAAI;IAAA;MAAA;MAAA;MAAA;IAAA,QAAM,eACrB;MAAA,qBAAWC,KAAK;IAAA;MAAA;MAAA;MAAA;IAAA,QAAM,eACtB;MAAA,qBAAWC,GAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QAAM,eACpB;MAAA,2BAAiBC,SAAS,GAAE,IAAI,GAAG,QAAQ;IAAA;MAAA;MAAA;MAAA;IAAA,QAAc,eACzD;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAA+B,EAC9BC,OAAO,CAACC,GAAG,CAAC,CAACC,MAAM,EAAEC,GAAG,kBACrB;MAAA,UAAKD;IAAM;MAAA;MAAA;MAAA;IAAA,QACd,CAAC;EAAA;IAAA;IAAA;IAAA;EAAA,QACI;AAEd,CAAC;AAAC,KAbWP,MAAM;AAenBA,MAAM,CAACS,SAAS,GAAG;EACfR,IAAI,EAAEF,SAAS,CAACW,MAAM;EACtBR,KAAK,EAAEH,SAAS,CAACW,MAAM;EACvBP,GAAG,EAAEJ,SAAS,CAACY,MAAM;EACrBC,SAAS,EAAEb,SAAS,CAACc,IAAI;EACzBR,OAAO,EAAEN,SAAS,CAACe,OAAO,CAACf,SAAS,CAACW,MAAM;AAC/C,CAAC;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}